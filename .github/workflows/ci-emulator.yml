name: CI with Firebase Emulator

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '10.11.0'

jobs:
  test-with-emulator:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        test-suite: [unit, integration, e2e]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Install Firebase CLI
        run: |
          curl -sL https://firebase.tools | bash
          firebase --version
      
      - name: Setup Firebase Emulator
        run: |
          # Create emulator config if not exists
          if [ ! -f firebase.json ]; then
            echo "Creating firebase.json..."
            cp .github/workflows/firebase.ci.json firebase.json
          fi
          
          # Download emulator
          firebase setup:emulators:firestore
          firebase setup:emulators:auth
          firebase setup:emulators:storage
      
      - name: Create test data
        run: |
          mkdir -p emulator-data
          echo '{}' > emulator-data/.keep
      
      - name: Start Firebase Emulator
        run: |
          firebase emulators:start \
            --only firestore,auth,storage \
            --project demo-test \
            --import ./emulator-data &
          
          # Wait for emulator to be ready
          npx wait-on http://localhost:8080 http://localhost:9099 -t 30000
      
      - name: Run Tests - ${{ matrix.test-suite }}
        env:
          VITE_USE_FIREBASE_EMULATOR: 'true'
          VITE_FIREBASE_EMULATOR_HOST: 'localhost'
          VITE_FIREBASE_FIRESTORE_PORT: '8080'
          VITE_FIREBASE_AUTH_PORT: '9099'
          VITE_FIREBASE_STORAGE_PORT: '9199'
          VITE_FIREBASE_PROJECT_ID: 'demo-test'
          CI: 'true'
        run: |
          case "${{ matrix.test-suite }}" in
            unit)
              pnpm test:unit
              ;;
            integration)
              pnpm test:unit -- tests/integration/
              ;;
            e2e)
              pnpm exec playwright install chromium
              pnpm test:e2e
              ;;
          esac
      
      - name: Export Emulator Data
        if: always()
        run: |
          firebase emulators:export ./emulator-export --force || true
      
      - name: Upload Emulator Data
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: emulator-data-${{ matrix.test-suite }}
          path: ./emulator-export
      
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.test-suite }}
          path: |
            test-results/
            coverage/
            playwright-report/
      
      - name: Cleanup
        if: always()
        run: |
          # Kill emulator processes
          pkill -f "firebase" || true
          pkill -f "java" || true

  lint-and-typecheck:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Run TypeScript check
        run: pnpm typecheck
      
      - name: Run Svelte check
        run: pnpm check

  build:
    runs-on: ubuntu-latest
    needs: [test-with-emulator, lint-and-typecheck]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Build application
        env:
          VITE_USE_FIREBASE_EMULATOR: 'false'
        run: pnpm build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: dist/